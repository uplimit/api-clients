/*
Uplimit Organization API

This API is used to manage organizations within the Uplimit platform. For more information, please reach out to your Uplimit Enterprise contact.

API version: 2025-08-18
Contact: hello@uplimit.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V1UnenrollUserFromSessionPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1UnenrollUserFromSessionPostRequest{}

// V1UnenrollUserFromSessionPostRequest struct for V1UnenrollUserFromSessionPostRequest
type V1UnenrollUserFromSessionPostRequest struct {
	// The email address of the user.
	EmailAddress string `json:"emailAddress"`
	// Internal ID to identify the session across the Uplimit platform.
	UplimitSessionId string `json:"uplimitSessionId"`
}

type _V1UnenrollUserFromSessionPostRequest V1UnenrollUserFromSessionPostRequest

// NewV1UnenrollUserFromSessionPostRequest instantiates a new V1UnenrollUserFromSessionPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1UnenrollUserFromSessionPostRequest(emailAddress string, uplimitSessionId string) *V1UnenrollUserFromSessionPostRequest {
	this := V1UnenrollUserFromSessionPostRequest{}
	this.EmailAddress = emailAddress
	this.UplimitSessionId = uplimitSessionId
	return &this
}

// NewV1UnenrollUserFromSessionPostRequestWithDefaults instantiates a new V1UnenrollUserFromSessionPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1UnenrollUserFromSessionPostRequestWithDefaults() *V1UnenrollUserFromSessionPostRequest {
	this := V1UnenrollUserFromSessionPostRequest{}
	return &this
}

// GetEmailAddress returns the EmailAddress field value
func (o *V1UnenrollUserFromSessionPostRequest) GetEmailAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value
// and a boolean to check if the value has been set.
func (o *V1UnenrollUserFromSessionPostRequest) GetEmailAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailAddress, true
}

// SetEmailAddress sets field value
func (o *V1UnenrollUserFromSessionPostRequest) SetEmailAddress(v string) {
	o.EmailAddress = v
}

// GetUplimitSessionId returns the UplimitSessionId field value
func (o *V1UnenrollUserFromSessionPostRequest) GetUplimitSessionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UplimitSessionId
}

// GetUplimitSessionIdOk returns a tuple with the UplimitSessionId field value
// and a boolean to check if the value has been set.
func (o *V1UnenrollUserFromSessionPostRequest) GetUplimitSessionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UplimitSessionId, true
}

// SetUplimitSessionId sets field value
func (o *V1UnenrollUserFromSessionPostRequest) SetUplimitSessionId(v string) {
	o.UplimitSessionId = v
}

func (o V1UnenrollUserFromSessionPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1UnenrollUserFromSessionPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["emailAddress"] = o.EmailAddress
	toSerialize["uplimitSessionId"] = o.UplimitSessionId
	return toSerialize, nil
}

func (o *V1UnenrollUserFromSessionPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"emailAddress",
		"uplimitSessionId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1UnenrollUserFromSessionPostRequest := _V1UnenrollUserFromSessionPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV1UnenrollUserFromSessionPostRequest)

	if err != nil {
		return err
	}

	*o = V1UnenrollUserFromSessionPostRequest(varV1UnenrollUserFromSessionPostRequest)

	return err
}

type NullableV1UnenrollUserFromSessionPostRequest struct {
	value *V1UnenrollUserFromSessionPostRequest
	isSet bool
}

func (v NullableV1UnenrollUserFromSessionPostRequest) Get() *V1UnenrollUserFromSessionPostRequest {
	return v.value
}

func (v *NullableV1UnenrollUserFromSessionPostRequest) Set(val *V1UnenrollUserFromSessionPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1UnenrollUserFromSessionPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1UnenrollUserFromSessionPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1UnenrollUserFromSessionPostRequest(val *V1UnenrollUserFromSessionPostRequest) *NullableV1UnenrollUserFromSessionPostRequest {
	return &NullableV1UnenrollUserFromSessionPostRequest{value: val, isSet: true}
}

func (v NullableV1UnenrollUserFromSessionPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1UnenrollUserFromSessionPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


