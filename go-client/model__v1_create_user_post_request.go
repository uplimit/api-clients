/*
Uplimit Organization API

This API is used to manage organizations within the Uplimit platform. For more information, please reach out to your Uplimit Enterprise contact.

API version: 2025-03-17
Contact: hello@uplimit.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V1CreateUserPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1CreateUserPostRequest{}

// V1CreateUserPostRequest struct for V1CreateUserPostRequest
type V1CreateUserPostRequest struct {
	// The email address of the user.
	EmailAddress string `json:"emailAddress"`
	// The first name of the user.
	FirstName string `json:"firstName"`
	// The last name of the user.
	LastName string `json:"lastName"`
	// Internal ID to identify the “group” the user belongs to within your organization. Leaving this blank will enroll the user into the default group.
	SubscriptionCommitmentId *string `json:"subscriptionCommitmentId,omitempty"`
}

type _V1CreateUserPostRequest V1CreateUserPostRequest

// NewV1CreateUserPostRequest instantiates a new V1CreateUserPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1CreateUserPostRequest(emailAddress string, firstName string, lastName string) *V1CreateUserPostRequest {
	this := V1CreateUserPostRequest{}
	this.EmailAddress = emailAddress
	this.FirstName = firstName
	this.LastName = lastName
	return &this
}

// NewV1CreateUserPostRequestWithDefaults instantiates a new V1CreateUserPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1CreateUserPostRequestWithDefaults() *V1CreateUserPostRequest {
	this := V1CreateUserPostRequest{}
	return &this
}

// GetEmailAddress returns the EmailAddress field value
func (o *V1CreateUserPostRequest) GetEmailAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value
// and a boolean to check if the value has been set.
func (o *V1CreateUserPostRequest) GetEmailAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailAddress, true
}

// SetEmailAddress sets field value
func (o *V1CreateUserPostRequest) SetEmailAddress(v string) {
	o.EmailAddress = v
}

// GetFirstName returns the FirstName field value
func (o *V1CreateUserPostRequest) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *V1CreateUserPostRequest) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *V1CreateUserPostRequest) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *V1CreateUserPostRequest) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *V1CreateUserPostRequest) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *V1CreateUserPostRequest) SetLastName(v string) {
	o.LastName = v
}

// GetSubscriptionCommitmentId returns the SubscriptionCommitmentId field value if set, zero value otherwise.
func (o *V1CreateUserPostRequest) GetSubscriptionCommitmentId() string {
	if o == nil || IsNil(o.SubscriptionCommitmentId) {
		var ret string
		return ret
	}
	return *o.SubscriptionCommitmentId
}

// GetSubscriptionCommitmentIdOk returns a tuple with the SubscriptionCommitmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1CreateUserPostRequest) GetSubscriptionCommitmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionCommitmentId) {
		return nil, false
	}
	return o.SubscriptionCommitmentId, true
}

// HasSubscriptionCommitmentId returns a boolean if a field has been set.
func (o *V1CreateUserPostRequest) HasSubscriptionCommitmentId() bool {
	if o != nil && !IsNil(o.SubscriptionCommitmentId) {
		return true
	}

	return false
}

// SetSubscriptionCommitmentId gets a reference to the given string and assigns it to the SubscriptionCommitmentId field.
func (o *V1CreateUserPostRequest) SetSubscriptionCommitmentId(v string) {
	o.SubscriptionCommitmentId = &v
}

func (o V1CreateUserPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1CreateUserPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["emailAddress"] = o.EmailAddress
	toSerialize["firstName"] = o.FirstName
	toSerialize["lastName"] = o.LastName
	if !IsNil(o.SubscriptionCommitmentId) {
		toSerialize["subscriptionCommitmentId"] = o.SubscriptionCommitmentId
	}
	return toSerialize, nil
}

func (o *V1CreateUserPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"emailAddress",
		"firstName",
		"lastName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1CreateUserPostRequest := _V1CreateUserPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV1CreateUserPostRequest)

	if err != nil {
		return err
	}

	*o = V1CreateUserPostRequest(varV1CreateUserPostRequest)

	return err
}

type NullableV1CreateUserPostRequest struct {
	value *V1CreateUserPostRequest
	isSet bool
}

func (v NullableV1CreateUserPostRequest) Get() *V1CreateUserPostRequest {
	return v.value
}

func (v *NullableV1CreateUserPostRequest) Set(val *V1CreateUserPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1CreateUserPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1CreateUserPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1CreateUserPostRequest(val *V1CreateUserPostRequest) *NullableV1CreateUserPostRequest {
	return &NullableV1CreateUserPostRequest{value: val, isSet: true}
}

func (v NullableV1CreateUserPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1CreateUserPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


